import { TeeDataType, BinaryType, TLBlockUnserializeResultType, TLBlockSerializeResultType, TLBlockType, TeeSgxQuoteDataType, TeeSgxReportDataType } from './types';
/**
 * Serializes and Unserializes TLB
 */
export interface TLBlockSerializer {
    /**
     * @param blob
     */
    unserializeTlb(blob: BinaryType): TLBlockUnserializeResultType | Promise<TLBlockUnserializeResultType>;
    /**
     * @param tlb
     * @param tlbMetadata
     */
    serializeTlb(tlb: TLBlockType, tlbMetadata: TeeDataType): TLBlockSerializeResultType | Promise<TLBlockSerializeResultType>;
    /**
     * @param tlbMetadata
     */
    serializeMetadata(tlbMetadata: TeeDataType): BinaryType | Promise<BinaryType>;
    /**
     *
     * @param anyData
     */
    serializeAnyData(anyData: any): BinaryType;
}
export interface TeeSgxParser {
    /**
     * @param data
     */
    parseQuote(data: BinaryType): TeeSgxQuoteDataType;
    /**
     * @param data
     */
    parseReport(data: BinaryType): TeeSgxReportDataType;
}
