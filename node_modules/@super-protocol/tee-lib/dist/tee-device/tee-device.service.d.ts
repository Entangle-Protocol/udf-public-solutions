/// <reference types="node" />
import { ITeeDeviceService, ParseTlsCertificateResult, TeeDeviceServiceParams as TeeDeviceServiceParams, UniqueKeyPolicyTypes } from './interfaces';
export declare class TeeDeviceService implements ITeeDeviceService {
    private readonly logger?;
    private readonly dcapVerifyService;
    private readonly enclaveService;
    private readonly skipQuoteVerifyError;
    private readonly deviceDebug;
    private static isInGramineMode;
    private static cacheDeviceId?;
    private static cacheTargetInfo?;
    private static cachedHardwareKeys;
    private static executeLikeWithMutex;
    constructor(params: TeeDeviceServiceParams);
    parseAndValidateTlsCertificate(cert: Buffer): Promise<ParseTlsCertificateResult>;
    getUniqKey(salt: Buffer, policy: UniqueKeyPolicyTypes): Promise<Buffer>;
    getDeviceId(): Promise<Buffer>;
    getDataOf(userData: Buffer): Promise<Buffer>;
    private validateMode;
}
