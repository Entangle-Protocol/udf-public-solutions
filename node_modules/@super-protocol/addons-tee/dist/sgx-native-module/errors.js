"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PkiServiceError = exports.QuoteSecurityValidationError = exports.QuoteValidationError = exports.AttestationDcapQuoteVerifyEnclaveError = void 0;
const consts_1 = require("./consts");
class AttestationDcapQuoteVerifyEnclaveError extends Error {
    constructor(msg) {
        super(msg);
        this.name = AttestationDcapQuoteVerifyEnclaveError.name;
    }
}
exports.AttestationDcapQuoteVerifyEnclaveError = AttestationDcapQuoteVerifyEnclaveError;
class QuoteValidationError extends AttestationDcapQuoteVerifyEnclaveError {
    constructor(verifyResult) {
        super();
        this.verifyResult = verifyResult;
        this.criticalError = false;
        this.verifyResult = verifyResult;
        this.criticalError = false;
        switch (verifyResult) {
            case 0xa001:
                this.message = `The SGX platform firmware and SW are at the latest security patching level but there are
                platform hardware configurations may expose the enclave to vulnerabilities.`;
                break;
            case 0xa002:
            case 0xa003:
            case 0xa004:
                this.message = `The SGX platform firmware and SW are not at the latest security patching level. The
                platform needs to be patched with firmware and/or software patches.`;
                break;
            case 0xa007:
            case 0xa008:
                this.message = `The SGX platform firmware and SW are at the latest security patching level but there
                are certain vulnerabilities that can only be mitigated with software mitigations implemented by the enclave.`;
                break;
            default:
                this.criticalError = true;
                this.message = `Quote verification failed. Verification result: 0x${Number(verifyResult).toString(16)}`;
                break;
        }
    }
}
exports.QuoteValidationError = QuoteValidationError;
class QuoteSecurityValidationError extends AttestationDcapQuoteVerifyEnclaveError {
    constructor(verifyResult) {
        super();
        this.verifyResult = verifyResult;
        this.verifyResult = verifyResult;
        this.message = "Invalid CPU settings are being used.";
        if (verifyResult.smtEnabled === consts_1.PckFlag.PCK_FLAG_TRUE) {
            this.message = " HyperThreading (SMT) is enabled. Please disable it in BIOS.";
        }
    }
}
exports.QuoteSecurityValidationError = QuoteSecurityValidationError;
class PkiServiceError extends Error {
    constructor(msg) {
        super(msg);
        this.name = PkiServiceError.name;
    }
}
exports.PkiServiceError = PkiServiceError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NneC1uYXRpdmUtbW9kdWxlL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxxQ0FBZ0U7QUFFaEUsTUFBYSxzQ0FBdUMsU0FBUSxLQUFLO0lBQzdELFlBQVksR0FBWTtRQUNwQixLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsSUFBSSxHQUFHLHNDQUFzQyxDQUFDLElBQUksQ0FBQztJQUM1RCxDQUFDO0NBQ0o7QUFMRCx3RkFLQztBQUVELE1BQWEsb0JBQXFCLFNBQVEsc0NBQXNDO0lBRTVFLFlBQTRCLFlBQW9CO1FBQzVDLEtBQUssRUFBRSxDQUFDO1FBRGdCLGlCQUFZLEdBQVosWUFBWSxDQUFRO1FBRHpDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBR3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBRTNCLFFBQVEsWUFBWSxFQUFFO1lBQ2xCLEtBQUssTUFBTTtnQkFDUCxJQUFJLENBQUMsT0FBTyxHQUFHOzRGQUM2RCxDQUFDO2dCQUM3RSxNQUFNO1lBQ1YsS0FBSyxNQUFNLENBQUM7WUFDWixLQUFLLE1BQU0sQ0FBQztZQUNaLEtBQUssTUFBTTtnQkFDUCxJQUFJLENBQUMsT0FBTyxHQUFHO29GQUNxRCxDQUFDO2dCQUNyRSxNQUFNO1lBQ1YsS0FBSyxNQUFNLENBQUM7WUFDWixLQUFLLE1BQU07Z0JBQ1AsSUFBSSxDQUFDLE9BQU8sR0FBRzs2SEFDOEYsQ0FBQztnQkFDOUcsTUFBTTtZQUNWO2dCQUNJLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO2dCQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLHFEQUFxRCxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ3hHLE1BQU07U0FDYjtJQUNMLENBQUM7Q0FDSjtBQTdCRCxvREE2QkM7QUFFRCxNQUFhLDRCQUE2QixTQUFRLHNDQUFzQztJQUNwRixZQUE0QixZQUF5QztRQUNqRSxLQUFLLEVBQUUsQ0FBQztRQURnQixpQkFBWSxHQUFaLFlBQVksQ0FBNkI7UUFFakUsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sR0FBRyxzQ0FBc0MsQ0FBQztRQUN0RCxJQUFJLFlBQVksQ0FBQyxVQUFVLEtBQUssZ0JBQU8sQ0FBQyxhQUFhLEVBQUU7WUFDbkQsSUFBSSxDQUFDLE9BQU8sR0FBRyw4REFBOEQsQ0FBQztTQUNqRjtJQUNMLENBQUM7Q0FDSjtBQVRELG9FQVNDO0FBRUQsTUFBYSxlQUFnQixTQUFRLEtBQUs7SUFDdEMsWUFBWSxHQUFZO1FBQ3BCLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxJQUFJLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQztJQUNyQyxDQUFDO0NBQ0o7QUFMRCwwQ0FLQyJ9