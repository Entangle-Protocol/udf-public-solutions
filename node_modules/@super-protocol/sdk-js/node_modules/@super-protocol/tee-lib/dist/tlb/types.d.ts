/// <reference types="node" />
export declare type TeeDataBlockType = {
    format: 'lzma' | 'gzip' | 'raw';
    userData: {
        hash: 'sha256' | 'sha384' | 'sha512';
        offset: 0 | number;
        size: 16 | number;
    };
};
export declare type TeeDataBlockQuoteFormatType = TeeDataBlockType['format'];
export declare type TeeDataKeysType = {
    class: 'ec';
    teePublic: {
        curve: 'secp256k1';
        format: 'der' | 'raw' | string;
        type: 'spki' | 'raw' | string;
    };
};
export declare type TeeDataType = {
    quote: TeeDataBlockType;
    keys: TeeDataKeysType;
    teePubKeyData: BinaryType;
};
export declare type BinaryType = Uint8Array | Buffer;
export declare type TLBlockType = {
    quote: BinaryType;
    data: BinaryType;
};
export declare type TLBlockUnserializeResultType = {
    quote: BinaryType;
    data: TeeDataType;
    dataBlob: BinaryType;
};
export declare type TLBlockSerializeResultType = BinaryType;
export declare type TeeSgxQuoteDataType = {
    header: {
        version: number;
        attestationKeyType: number;
        userData: BinaryType;
    };
    report: BinaryType;
};
export declare type TeeSgxReportDataType = {
    cpuSvn: string;
    mrEnclave: BinaryType;
    mrSigner: BinaryType;
    dataHash: BinaryType;
};
