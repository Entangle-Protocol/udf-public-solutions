import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "";
export interface Cpus {
    vendorId: string;
    cpuFamily: number;
    model: number;
    modelName: string;
    physicalCores: number;
    logicalCores: number;
    baseFreq: number;
    maxFreq: number;
}
export interface TeeDeviceInfo {
    cpus: Cpus[];
    memSize: number;
    totalPhysicalCores: number;
    totalLogicalCores: number;
}
export interface TeeRunCpuBenchmark {
    cpuScore: number;
    cpuBenchmark: string;
    cpuCoresCount: number;
}
export interface TeeRunMemoryBenchmark {
    memBandwidth: number;
    meConfirmedSize: number;
}
export interface TeeProperties {
    teeDeviceInfo: TeeDeviceInfo | undefined;
    teeRunCpuBenchmark: TeeRunCpuBenchmark | undefined;
    teeRunMemoryBenchmark: TeeRunMemoryBenchmark | undefined;
}
export declare const Cpus: {
    encode(message: Cpus, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Cpus;
    fromJSON(object: any): Cpus;
    toJSON(message: Cpus): unknown;
    fromPartial<I extends {
        vendorId?: string | undefined;
        cpuFamily?: number | undefined;
        model?: number | undefined;
        modelName?: string | undefined;
        physicalCores?: number | undefined;
        logicalCores?: number | undefined;
        baseFreq?: number | undefined;
        maxFreq?: number | undefined;
    } & {
        vendorId?: string | undefined;
        cpuFamily?: number | undefined;
        model?: number | undefined;
        modelName?: string | undefined;
        physicalCores?: number | undefined;
        logicalCores?: number | undefined;
        baseFreq?: number | undefined;
        maxFreq?: number | undefined;
    } & { [K in Exclude<keyof I, keyof Cpus>]: never; }>(object: I): Cpus;
};
export declare const TeeDeviceInfo: {
    encode(message: TeeDeviceInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TeeDeviceInfo;
    fromJSON(object: any): TeeDeviceInfo;
    toJSON(message: TeeDeviceInfo): unknown;
    fromPartial<I extends {
        cpus?: {
            vendorId?: string | undefined;
            cpuFamily?: number | undefined;
            model?: number | undefined;
            modelName?: string | undefined;
            physicalCores?: number | undefined;
            logicalCores?: number | undefined;
            baseFreq?: number | undefined;
            maxFreq?: number | undefined;
        }[] | undefined;
        memSize?: number | undefined;
        totalPhysicalCores?: number | undefined;
        totalLogicalCores?: number | undefined;
    } & {
        cpus?: ({
            vendorId?: string | undefined;
            cpuFamily?: number | undefined;
            model?: number | undefined;
            modelName?: string | undefined;
            physicalCores?: number | undefined;
            logicalCores?: number | undefined;
            baseFreq?: number | undefined;
            maxFreq?: number | undefined;
        }[] & ({
            vendorId?: string | undefined;
            cpuFamily?: number | undefined;
            model?: number | undefined;
            modelName?: string | undefined;
            physicalCores?: number | undefined;
            logicalCores?: number | undefined;
            baseFreq?: number | undefined;
            maxFreq?: number | undefined;
        } & {
            vendorId?: string | undefined;
            cpuFamily?: number | undefined;
            model?: number | undefined;
            modelName?: string | undefined;
            physicalCores?: number | undefined;
            logicalCores?: number | undefined;
            baseFreq?: number | undefined;
            maxFreq?: number | undefined;
        } & { [K in Exclude<keyof I["cpus"][number], keyof Cpus>]: never; })[] & { [K_1 in Exclude<keyof I["cpus"], keyof {
            vendorId?: string | undefined;
            cpuFamily?: number | undefined;
            model?: number | undefined;
            modelName?: string | undefined;
            physicalCores?: number | undefined;
            logicalCores?: number | undefined;
            baseFreq?: number | undefined;
            maxFreq?: number | undefined;
        }[]>]: never; }) | undefined;
        memSize?: number | undefined;
        totalPhysicalCores?: number | undefined;
        totalLogicalCores?: number | undefined;
    } & { [K_2 in Exclude<keyof I, keyof TeeDeviceInfo>]: never; }>(object: I): TeeDeviceInfo;
};
export declare const TeeRunCpuBenchmark: {
    encode(message: TeeRunCpuBenchmark, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TeeRunCpuBenchmark;
    fromJSON(object: any): TeeRunCpuBenchmark;
    toJSON(message: TeeRunCpuBenchmark): unknown;
    fromPartial<I extends {
        cpuScore?: number | undefined;
        cpuBenchmark?: string | undefined;
        cpuCoresCount?: number | undefined;
    } & {
        cpuScore?: number | undefined;
        cpuBenchmark?: string | undefined;
        cpuCoresCount?: number | undefined;
    } & { [K in Exclude<keyof I, keyof TeeRunCpuBenchmark>]: never; }>(object: I): TeeRunCpuBenchmark;
};
export declare const TeeRunMemoryBenchmark: {
    encode(message: TeeRunMemoryBenchmark, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TeeRunMemoryBenchmark;
    fromJSON(object: any): TeeRunMemoryBenchmark;
    toJSON(message: TeeRunMemoryBenchmark): unknown;
    fromPartial<I extends {
        memBandwidth?: number | undefined;
        meConfirmedSize?: number | undefined;
    } & {
        memBandwidth?: number | undefined;
        meConfirmedSize?: number | undefined;
    } & { [K in Exclude<keyof I, keyof TeeRunMemoryBenchmark>]: never; }>(object: I): TeeRunMemoryBenchmark;
};
export declare const TeeProperties: {
    encode(message: TeeProperties, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TeeProperties;
    fromJSON(object: any): TeeProperties;
    toJSON(message: TeeProperties): unknown;
    fromPartial<I extends {
        teeDeviceInfo?: {
            cpus?: {
                vendorId?: string | undefined;
                cpuFamily?: number | undefined;
                model?: number | undefined;
                modelName?: string | undefined;
                physicalCores?: number | undefined;
                logicalCores?: number | undefined;
                baseFreq?: number | undefined;
                maxFreq?: number | undefined;
            }[] | undefined;
            memSize?: number | undefined;
            totalPhysicalCores?: number | undefined;
            totalLogicalCores?: number | undefined;
        } | undefined;
        teeRunCpuBenchmark?: {
            cpuScore?: number | undefined;
            cpuBenchmark?: string | undefined;
            cpuCoresCount?: number | undefined;
        } | undefined;
        teeRunMemoryBenchmark?: {
            memBandwidth?: number | undefined;
            meConfirmedSize?: number | undefined;
        } | undefined;
    } & {
        teeDeviceInfo?: ({
            cpus?: {
                vendorId?: string | undefined;
                cpuFamily?: number | undefined;
                model?: number | undefined;
                modelName?: string | undefined;
                physicalCores?: number | undefined;
                logicalCores?: number | undefined;
                baseFreq?: number | undefined;
                maxFreq?: number | undefined;
            }[] | undefined;
            memSize?: number | undefined;
            totalPhysicalCores?: number | undefined;
            totalLogicalCores?: number | undefined;
        } & {
            cpus?: ({
                vendorId?: string | undefined;
                cpuFamily?: number | undefined;
                model?: number | undefined;
                modelName?: string | undefined;
                physicalCores?: number | undefined;
                logicalCores?: number | undefined;
                baseFreq?: number | undefined;
                maxFreq?: number | undefined;
            }[] & ({
                vendorId?: string | undefined;
                cpuFamily?: number | undefined;
                model?: number | undefined;
                modelName?: string | undefined;
                physicalCores?: number | undefined;
                logicalCores?: number | undefined;
                baseFreq?: number | undefined;
                maxFreq?: number | undefined;
            } & {
                vendorId?: string | undefined;
                cpuFamily?: number | undefined;
                model?: number | undefined;
                modelName?: string | undefined;
                physicalCores?: number | undefined;
                logicalCores?: number | undefined;
                baseFreq?: number | undefined;
                maxFreq?: number | undefined;
            } & { [K in Exclude<keyof I["teeDeviceInfo"]["cpus"][number], keyof Cpus>]: never; })[] & { [K_1 in Exclude<keyof I["teeDeviceInfo"]["cpus"], keyof {
                vendorId?: string | undefined;
                cpuFamily?: number | undefined;
                model?: number | undefined;
                modelName?: string | undefined;
                physicalCores?: number | undefined;
                logicalCores?: number | undefined;
                baseFreq?: number | undefined;
                maxFreq?: number | undefined;
            }[]>]: never; }) | undefined;
            memSize?: number | undefined;
            totalPhysicalCores?: number | undefined;
            totalLogicalCores?: number | undefined;
        } & { [K_2 in Exclude<keyof I["teeDeviceInfo"], keyof TeeDeviceInfo>]: never; }) | undefined;
        teeRunCpuBenchmark?: ({
            cpuScore?: number | undefined;
            cpuBenchmark?: string | undefined;
            cpuCoresCount?: number | undefined;
        } & {
            cpuScore?: number | undefined;
            cpuBenchmark?: string | undefined;
            cpuCoresCount?: number | undefined;
        } & { [K_3 in Exclude<keyof I["teeRunCpuBenchmark"], keyof TeeRunCpuBenchmark>]: never; }) | undefined;
        teeRunMemoryBenchmark?: ({
            memBandwidth?: number | undefined;
            meConfirmedSize?: number | undefined;
        } & {
            memBandwidth?: number | undefined;
            meConfirmedSize?: number | undefined;
        } & { [K_4 in Exclude<keyof I["teeRunMemoryBenchmark"], keyof TeeRunMemoryBenchmark>]: never; }) | undefined;
    } & { [K_5 in Exclude<keyof I, keyof TeeProperties>]: never; }>(object: I): TeeProperties;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
