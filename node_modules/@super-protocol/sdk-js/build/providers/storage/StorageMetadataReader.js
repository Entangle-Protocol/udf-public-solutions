"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = __importDefault(require("../../logger"));
class StorageMetadataReader {
    constructor(config) {
        const { showLogs = true, objectDeletedFlag, storageKeyValueAdapter } = config;
        this.logger = showLogs ? logger_1.default.child({ class: StorageMetadataReader.name }) : null;
        this.storageKeyValueAdapter = storageKeyValueAdapter;
        this.objectDeletedFlag = objectDeletedFlag;
    }
    listInstances(key) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.storageKeyValueAdapter
                .listFiles(`${key}/`)
                .then((objects) => new Map(objects.map((obj) => { var _a; return [((_a = obj.name.split('/')) === null || _a === void 0 ? void 0 : _a.pop()) || obj.name, obj]; })));
        });
    }
    fetchInstancesUpdates(key, currentInstances) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const result = {
                updated: new Map(),
                deleted: new Set(),
            };
            try {
                const directoryInstances = yield this.listInstances(key);
                if (directoryInstances.has(this.objectDeletedFlag)) {
                    result.deleted.add(key);
                    return result;
                }
                directoryInstances.forEach((instance, instanceId) => {
                    const currentInstance = currentInstances.get(instanceId);
                    if (!currentInstance || currentInstance.modifiedTs < instance.createdAt.getTime()) {
                        result.updated.set(instanceId, instance);
                    }
                });
                currentInstances.forEach((_, instanceId) => {
                    if (!directoryInstances.has(instanceId)) {
                        result.deleted.add(instanceId);
                    }
                });
                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.trace({
                    updated: result.updated.size,
                    deleted: result.deleted.size,
                }, 'Check result');
                return result;
            }
            catch (error) {
                (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error({ error }, 'Error fetching remote copy');
                return result;
            }
        });
    }
}
exports.default = StorageMetadataReader;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RvcmFnZU1ldGFkYXRhUmVhZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9zdG9yYWdlL1N0b3JhZ2VNZXRhZGF0YVJlYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUNBLDBEQUE4QztBQWU5QyxNQUFxQixxQkFBcUI7SUFLeEMsWUFBWSxNQUFzQztRQUNoRCxNQUFNLEVBQUUsUUFBUSxHQUFHLElBQUksRUFBRSxpQkFBaUIsRUFBRSxzQkFBc0IsRUFBRSxHQUFHLE1BQU0sQ0FBQztRQUM5RSxJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsZ0JBQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ3BGLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxzQkFBc0IsQ0FBQztRQUNyRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUFDN0MsQ0FBQztJQUVhLGFBQWEsQ0FBQyxHQUFNOztZQUNoQyxPQUFPLElBQUksQ0FBQyxzQkFBc0I7aUJBQy9CLFNBQVMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO2lCQUNwQixJQUFJLENBQ0gsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFDLE9BQUEsQ0FBQyxDQUFBLE1BQUEsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLDBDQUFFLEdBQUcsRUFBRSxLQUFJLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUEsRUFBQSxDQUFDLENBQUMsQ0FDMUYsQ0FBQztRQUNOLENBQUM7S0FBQTtJQUVLLHFCQUFxQixDQUN6QixHQUFNLEVBQ04sZ0JBQTZDOzs7WUFFN0MsTUFBTSxNQUFNLEdBQXFCO2dCQUMvQixPQUFPLEVBQUUsSUFBSSxHQUFHLEVBQUU7Z0JBQ2xCLE9BQU8sRUFBRSxJQUFJLEdBQUcsRUFBRTthQUNuQixDQUFDO1lBRUYsSUFBSTtnQkFDRixNQUFNLGtCQUFrQixHQUFHLE1BQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFekQsSUFBSSxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUU7b0JBQ2xELE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUV4QixPQUFPLE1BQU0sQ0FBQztpQkFDZjtnQkFFRCxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLEVBQUUsVUFBVSxFQUFFLEVBQUU7b0JBQ2xELE1BQU0sZUFBZSxHQUFHLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFDekQsSUFBSSxDQUFDLGVBQWUsSUFBSSxlQUFlLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQUU7d0JBQ2pGLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztxQkFDMUM7Z0JBQ0gsQ0FBQyxDQUFDLENBQUM7Z0JBRUgsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsRUFBRSxFQUFFO29CQUN6QyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFO3dCQUN2QyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztxQkFDaEM7Z0JBQ0gsQ0FBQyxDQUFDLENBQUM7Z0JBRUgsTUFBQSxJQUFJLENBQUMsTUFBTSwwQ0FBRSxLQUFLLENBQ2hCO29CQUNFLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUk7b0JBQzVCLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUk7aUJBQzdCLEVBQ0QsY0FBYyxDQUNmLENBQUM7Z0JBRUYsT0FBTyxNQUFNLENBQUM7YUFDZjtZQUFDLE9BQU8sS0FBSyxFQUFFO2dCQUNkLE1BQUEsSUFBSSxDQUFDLE1BQU0sMENBQUUsS0FBSyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztnQkFFNUQsT0FBTyxNQUFNLENBQUM7YUFDZjs7S0FDRjtDQUNGO0FBbEVELHdDQWtFQyJ9