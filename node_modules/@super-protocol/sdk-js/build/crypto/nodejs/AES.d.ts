/// <reference types="node" />
import { AESEncryption, Encryption } from '@super-protocol/dto-js';
import { ReadStream, WriteStream } from 'fs';
declare class AES {
    static encrypt(content: string, encryption: Encryption): Promise<AESEncryption>;
    /**
     * Encrypts data stream
     * @param inputStream - path to file that will be encrypted
     * @param outputStream - place where it will be saved
     * @param algorithm - file encryption algorithm
     * @param key – key that will be used to encrypt data
     * @returns {Promise<Encryption>} - encryption info
     */
    static encryptStream(inputStream: ReadStream, outputStream: WriteStream, encryption: Encryption): Promise<AESEncryption>;
    static decrypt(encryption: AESEncryption): string;
    /**
     * Decrypts data stream
     * @param inputStream - stream with data to decrypt
     * @param outputStream - stream where the decrypted data will be written
     * @param encryption – encryption info
     */
    static decryptStream(inputStream: ReadStream, outputStream: WriteStream, encryption: AESEncryption): Promise<void>;
}
export default AES;
