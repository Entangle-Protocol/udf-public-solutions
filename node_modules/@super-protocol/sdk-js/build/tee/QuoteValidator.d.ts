/// <reference types="node" />
import { QuoteValidationStatuses } from './statuses';
export interface ValidationResult {
    quoteValidationStatus: QuoteValidationStatuses;
    description: string;
    error?: unknown;
}
export declare class QuoteValidator {
    private readonly isDefault;
    private readonly baseUrl;
    private readonly teeSgxParser;
    private logger;
    constructor(baseUrl?: string);
    private splitChain;
    private findSequenceByOID;
    private searchForSequence;
    private verifyDataBySignature;
    private checkValidDate;
    private checkChainForIssuers;
    private getCrl;
    private checkCertificatesInCrl;
    private getCertificates;
    private verifyQeReportSignature;
    private verifyQeReportData;
    private verifyEnclaveReportSignature;
    private validateQuoteStructure;
    private getSgxExtensionData;
    private getDataFromExtension;
    private getTcbInfo;
    private getQEIdentity;
    private getQEIdentityStatus;
    private getTcbStatus;
    private getQuoteValidationStatus;
    private getQuoteValidationStatusDescription;
    validate(quoteBuffer: Buffer): Promise<ValidationResult>;
    isQuoteHasUserData(quoteBuffer: Buffer, userDataBuffer: Buffer): Promise<boolean>;
    private getSha256Hash;
}
