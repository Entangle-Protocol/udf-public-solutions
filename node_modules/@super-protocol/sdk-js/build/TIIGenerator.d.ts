/// <reference types="node" />
import { BlockchainId } from './types';
import { Encryption, Hash, Resource, TeeRunInfo } from '@super-protocol/dto-js';
declare class TIIGenerator {
    static generateByOffer(offerId: BlockchainId, solutionHashes: Hash[], linkageString: string | undefined, resource: Resource, args: any, encryption: Encryption): Promise<string>;
    static generate(orderId: BlockchainId, resource: Resource, args: any, encryption: Encryption): Promise<string>;
    static getSolutionHashesAndLinkage(inputOffers: BlockchainId[]): Promise<{
        hashes: Hash[];
        linkage?: string;
    }>;
    static getTRI(tii: string, decryptionKey: Buffer): Promise<TeeRunInfo>;
    static getUrl(tii: string, decryptionKey: Buffer): Promise<string>;
    static getResource<T>(tii: string, decryptionKey: Buffer): Promise<T>;
}
export default TIIGenerator;
