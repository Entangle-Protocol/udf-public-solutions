"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = __importDefault(require("../logger"));
class NonceTracker {
    constructor(web3, address) {
        this.web3 = web3;
        this.address = address;
        this.countOfPendingTransactions = 0;
        this.logger = logger_1.default.child({ className: 'NonceTracker', address });
        this.logger.trace('Created NonceTracker');
    }
    initAccount() {
        return __awaiter(this, void 0, void 0, function* () {
            this.txCount = yield this.web3.eth.getTransactionCount(this.address);
            this.logger.trace(`Initialized ${this.address} account with nonce: ${this.txCount}`);
        });
    }
    getNonce() {
        if (this.txCount === undefined)
            throw Error(`NonceTracker for address ${this.address} is not initialized`);
        this.logger.trace(`Get nonce: ${this.txCount}`);
        return this.txCount;
    }
    consumeNonce() {
        if (this.txCount === undefined)
            throw Error(`NonceTracker for address ${this.address} is not initialized`);
        this.logger.trace(`Consume nonce: ${this.txCount + BigInt(1)}`);
        return this.txCount++;
    }
    onTransactionStartPublishing() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.transactionsOnHold) {
                yield this.waitForPendingTransactions();
            }
            this.countOfPendingTransactions++;
        });
    }
    onTransactionPublished() {
        this.countOfPendingTransactions--;
        if (this.countOfPendingTransactions === 0) {
            void this.sendHoldTransactions();
        }
    }
    onTransactionError() {
        return __awaiter(this, void 0, void 0, function* () {
            this.countOfPendingTransactions--;
            if (!this.transactionsOnHold)
                this.transactionsOnHold = [];
            if (this.countOfPendingTransactions === 0) {
                yield this.sendHoldTransactions();
            }
            else {
                yield this.waitForPendingTransactions();
            }
        });
    }
    waitForPendingTransactions() {
        return new Promise((resolve) => {
            if (!this.transactionsOnHold)
                return resolve();
            this.transactionsOnHold.push(() => {
                resolve();
            });
        });
    }
    sendHoldTransactions() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.transactionsOnHold)
                return;
            yield this.initAccount();
            this.transactionsOnHold.forEach((callback) => callback());
            this.transactionsOnHold = undefined;
        });
    }
}
exports.default = NonceTracker;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9uY2VUcmFja2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL05vbmNlVHJhY2tlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUNBLHVEQUFtQztBQUduQyxNQUFNLFlBQVk7SUFNaEIsWUFBb0IsSUFBVSxFQUFVLE9BQWU7UUFBbkMsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUFVLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFGL0MsK0JBQTBCLEdBQUcsQ0FBQyxDQUFDO1FBR3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsZ0JBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsY0FBYyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDdkUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRVksV0FBVzs7WUFDdEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNyRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFlLElBQUksQ0FBQyxPQUFPLHdCQUF3QixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUN2RixDQUFDO0tBQUE7SUFFTSxRQUFRO1FBQ2IsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLFNBQVM7WUFDNUIsTUFBTSxLQUFLLENBQUMsNEJBQTRCLElBQUksQ0FBQyxPQUFPLHFCQUFxQixDQUFDLENBQUM7UUFFN0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsY0FBYyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUVoRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVNLFlBQVk7UUFDakIsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLFNBQVM7WUFDNUIsTUFBTSxLQUFLLENBQUMsNEJBQTRCLElBQUksQ0FBQyxPQUFPLHFCQUFxQixDQUFDLENBQUM7UUFFN0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsa0JBQWtCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVoRSxPQUFPLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRVksNEJBQTRCOztZQUN2QyxJQUFJLElBQUksQ0FBQyxrQkFBa0IsRUFBRTtnQkFDM0IsTUFBTSxJQUFJLENBQUMsMEJBQTBCLEVBQUUsQ0FBQzthQUN6QztZQUNELElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1FBQ3BDLENBQUM7S0FBQTtJQUVNLHNCQUFzQjtRQUMzQixJQUFJLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztRQUVsQyxJQUFJLElBQUksQ0FBQywwQkFBMEIsS0FBSyxDQUFDLEVBQUU7WUFDekMsS0FBSyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztTQUNsQztJQUNILENBQUM7SUFFWSxrQkFBa0I7O1lBQzdCLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCO2dCQUFFLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLENBQUM7WUFFM0QsSUFBSSxJQUFJLENBQUMsMEJBQTBCLEtBQUssQ0FBQyxFQUFFO2dCQUN6QyxNQUFNLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO2FBQ25DO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7YUFDekM7UUFDSCxDQUFDO0tBQUE7SUFFTywwQkFBMEI7UUFDaEMsT0FBTyxJQUFJLE9BQU8sQ0FBTyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ25DLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCO2dCQUFFLE9BQU8sT0FBTyxFQUFFLENBQUM7WUFDL0MsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ2hDLE9BQU8sRUFBRSxDQUFDO1lBQ1osQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFYSxvQkFBb0I7O1lBQ2hDLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCO2dCQUFFLE9BQU87WUFFckMsTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUMxRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsU0FBUyxDQUFDO1FBQ3RDLENBQUM7S0FBQTtDQUNGO0FBRUQsa0JBQWUsWUFBWSxDQUFDIn0=