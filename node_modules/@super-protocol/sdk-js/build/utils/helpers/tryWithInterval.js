"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryWithInterval = void 0;
const tryWithInterval = (params) => __awaiter(void 0, void 0, void 0, function* () {
    let checkedTimes = 0;
    const { handler, checkResult, checkError, startDelay = 0, retryInterval, retryMax } = params;
    const reachedMaxRetries = () => checkedTimes >= retryMax;
    return yield new Promise((resolve, reject) => {
        const scheduleNewIteration = (delay) => {
            checkedTimes += 1;
            setTimeout(timeoutFn, delay);
        };
        const timeoutFn = () => __awaiter(void 0, void 0, void 0, function* () {
            try {
                const result = yield handler();
                const isResultOk = checkResult ? checkResult(result).isResultOk : true;
                if (isResultOk) {
                    resolve(result);
                    return;
                }
                if (reachedMaxRetries()) {
                    reject(new Error(`${exports.tryWithInterval.name}: MaxCheck count reached!`));
                    return;
                }
            }
            catch (err) {
                const isErrorRetryable = checkError ? checkError(err).retryable : true;
                if (!isErrorRetryable || reachedMaxRetries()) {
                    reject(err);
                    return;
                }
            }
            scheduleNewIteration(retryInterval);
        });
        scheduleNewIteration(startDelay);
    });
});
exports.tryWithInterval = tryWithInterval;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ5V2l0aEludGVydmFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2hlbHBlcnMvdHJ5V2l0aEludGVydmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVNPLE1BQU0sZUFBZSxHQUFHLENBQVUsTUFBZ0MsRUFBYyxFQUFFO0lBQ3ZGLElBQUksWUFBWSxHQUFHLENBQUMsQ0FBQztJQUNyQixNQUFNLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsVUFBVSxHQUFHLENBQUMsRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLEdBQUcsTUFBTSxDQUFDO0lBRTdGLE1BQU0saUJBQWlCLEdBQUcsR0FBWSxFQUFFLENBQUMsWUFBWSxJQUFJLFFBQVEsQ0FBQztJQUVsRSxPQUFPLE1BQU0sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDM0MsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLEtBQWEsRUFBUSxFQUFFO1lBQ25ELFlBQVksSUFBSSxDQUFDLENBQUM7WUFDbEIsVUFBVSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQUM7UUFFRixNQUFNLFNBQVMsR0FBRyxHQUF3QixFQUFFO1lBQzFDLElBQUk7Z0JBQ0YsTUFBTSxNQUFNLEdBQUcsTUFBTSxPQUFPLEVBQUUsQ0FBQztnQkFDL0IsTUFBTSxVQUFVLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3ZFLElBQUksVUFBVSxFQUFFO29CQUNkLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztvQkFFaEIsT0FBTztpQkFDUjtnQkFDRCxJQUFJLGlCQUFpQixFQUFFLEVBQUU7b0JBQ3ZCLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxHQUFHLHVCQUFlLENBQUMsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDLENBQUM7b0JBRXRFLE9BQU87aUJBQ1I7YUFDRjtZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNaLE1BQU0sZ0JBQWdCLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQ3ZFLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxpQkFBaUIsRUFBRSxFQUFFO29CQUM1QyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBRVosT0FBTztpQkFDUjthQUNGO1lBRUQsb0JBQW9CLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxDQUFBLENBQUM7UUFFRixvQkFBb0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNuQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQSxDQUFDO0FBeENXLFFBQUEsZUFBZSxtQkF3QzFCIn0=