import abi from '../contracts/abi';
import { Contract } from 'web3';
import { ReconnectOptions } from 'web3-utils';
export type Config = {
    contractAddress: string;
    blockchainUrl?: string;
    gasPrice?: bigint;
    gasLimit?: bigint;
    gasLimitMultiplier?: number;
    gasPriceMultiplier?: number;
    txConcurrency?: number;
    txIntervalMs?: number;
    reconnect?: Partial<ReconnectOptions>;
};
export declare class BaseConnector {
    protected initialized: boolean;
    protected logger: import("pino").default.Logger<{
        level: string;
        enabled: boolean;
    } & import("pino").default.ChildLoggerOptions>;
    protected contract?: Contract<typeof abi>;
    isInitialized(): boolean;
    checkIfInitialized(): void;
    /**
     *
     * @returns initialized contract
     */
    getContract(): Contract<typeof abi>;
    /**
     * Function for connecting to blockchain
     * Used to setting up settings for blockchain connector
     * Needs to run this function before using blockchain connector
     */
    initialize(_config: Config): Promise<void>;
    shutdown(): void;
}
