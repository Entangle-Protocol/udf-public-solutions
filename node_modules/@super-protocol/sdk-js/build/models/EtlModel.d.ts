/// <reference types="node" />
import { EtlModel as IEtlModel, EtlModelMetadata } from '@super-protocol/dto-js';
import { EtlModelType } from '@super-protocol/dto-js/build/enum/EtlModel.enum';
import { EtlModelSubtype } from '../types';
export declare class EtlModel {
    private etlModel;
    static logger: import("pino").default.Logger<{
        level: string;
        enabled: boolean;
    } & import("pino").default.ChildLoggerOptions>;
    constructor(etlModel: IEtlModel);
    /**
     * Create instance of EtlModel from Buffer
     *
     * @param data - packed EtlModel
     * @returns instance of EtlModel
     */
    static unpack(data: Buffer): Promise<EtlModel>;
    /**
     * Packing EltModel
     *
     * @returns EltModel in binary format
     */
    pack(): Promise<Buffer>;
    downloadMetadata(): Promise<Record<string, unknown>>;
    getType(): EtlModelType;
    setType(type: EtlModelType): void;
    getSubtype(): EtlModelSubtype;
    setSubtype(subtype: EtlModelSubtype | null): void;
    getMetadata(): EtlModelMetadata | void;
    setMetadata(metadata: EtlModelMetadata | undefined): void;
    private parseJsonResource;
    private parseProtobufResource;
}
