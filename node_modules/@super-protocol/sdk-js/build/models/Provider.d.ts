import { ProviderInfo, Origins, TransactionOptions, BlockchainId } from '../types';
declare class Provider {
    private static contract;
    providerInfo?: ProviderInfo;
    violationRate?: bigint | string;
    authority?: string;
    valueOffers?: BlockchainId[];
    teeOffers?: BlockchainId[];
    origins?: Origins;
    providerId: string;
    constructor(providerId: string);
    modify(providerInfo: ProviderInfo, transactionOptions?: TransactionOptions): Promise<void>;
    /**
     * Function for fetching provider info from blockchain
     */
    getInfo(): Promise<ProviderInfo>;
    /**
     * Function for fetching provider authority address from blockchain
     */
    getAuthority(): string;
    /**
     * Function for fetching all value offers for this provider
     */
    getValueOffers(): Promise<BlockchainId[]>;
    /**
     * Function for fetching all TEE offers for this provider
     */
    getTeeOffers(): Promise<BlockchainId[]>;
    /**
     * Function for fetching violationRate for this provider
     */
    getViolationRate(): Promise<bigint | string>;
    /**
     * Fetch new Origins (createdDate, createdBy, modifiedDate and modifiedBy)
     */
    getOrigins(): Promise<Origins>;
    isProviderBanned(): Promise<boolean>;
    getOrdersLockedProfitList(): Promise<BlockchainId[]>;
    getTcbLockedProfitList(): Promise<BlockchainId[]>;
}
export default Provider;
